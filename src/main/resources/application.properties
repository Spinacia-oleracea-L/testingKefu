#	此文件为系统配置文件。如果不了解，可以自行搜索查阅 springboot2 的相关资料
#
# mysql 数据库文件： http://down.leimingyun.com/yunkefu/kefu_v1.1.sql
# 注意，Mysql数据库版本必须是 5.7 版本！
# 
# 如果你技术实力不大够，或者时间不充足，可以找我方求助，我们有有偿帮助服务，只收人工工时费。详细参考： https://www.leimingyun.com/pay.html
# 
# author:管雷鸣
#

#数据库的名字，数据库名
database.name=yunkefu
##数据库所在ip地址，连接的ip，如 127.0.0.1
database.ip=192.168.31.242
##数据库连接的登陆账号
spring.datasource.username=root
##数据库连接的登陆密码
spring.datasource.password=1CuRMEqiRgaCfsr5@wM1


# Mysql 数据库配置
#spring.datasource.url=jdbc:mysql://${database.ip}:3306/${database.name}?useUnicode=true&characterEncoding=utf-8&useSSL=true
spring.datasource.url=jdbc:mysql://${database.ip}:3306/${database.name}?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Sqlite数据库配置，默认使用此数据库，无需任何准备及配置就可以直接运行起来
#spring.datasource.url=jdbc:sqlite::resource:wangmarket.db
#spring.datasource.driver-class-name=org.sqlite.JDBC
#spring.jpa.database-platform=com.xnx3.j2ee.dialect.SQLiteDialect

# hikari连接池配置
# 连接池中的最大连接数
spring.datasource.hikari.maximum-pool-size=5


# =============下面的如果不懂就不要动了，按照这个配置默认就好==============

#更新数据表  
spring.jpa.properties.hibernate.hbm2ddl.auto=update
#spring.jpa.show-sql=true

#访问的后缀名
url.suffix=.do
api.suffix=.json

spring.mvc.view.prefix =/WEB-INF/view/
spring.mvc.view.suffix =.jsp  
application.hello =welcome use iw framework!

#设置改动后不自动重启
spring.devtools.restart.enabled=false
#排除那个目录的文件不需要restart
spring.devtools.restart.exclude=static/**,public/**,site/**,cache/**,META-INF/resources/WEB-INF/view/**,wangmarket.db,head/**

#文件最大上传限制，限制在3MB以内。 单位包括  MB 、 KB、 GB
spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=30MB

#禁用 spring 的 favicon 的图标，用自己的，在 resources/static/favicon.ico
spring.mvc.favicon.enabled =false

# 错误页，指定发生错误时，跳转的URL。请查看BasicErrorController源码便知  
#server.error.path=/error  

# 主站url，即使用泛解析的主域名访问时，直接跳转到的url
site.masterSiteUrl =login.do

logging.level.root=info

#以下4项，上生产环境以后一定要改！！！！！
#spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#spring.datasource.druid.stat-view-servlet.allow=127.0.0.1,*
#spring.datasource.druid.stat-view-servlet.login-username=admin
#spring.datasource.druid.stat-view-servlet.login-password=admin
#spring.datasource.druid.stat-view-servlet.enabled=true

# RabbitMQ 如果将下面都注释掉，则是不启用 rabbitMQ
## 其中 RabbitMQ 服务器的搭建，参考 http://help.wscso.com/6924.html
#spring.rabbitmq.host=127.0.0.1
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=admin
#spring.rabbitmq.password=xxxx

# Redis
# 是否启用redis，都注释掉为不启用，host不注释则是启用
#spring.redis.host=127.0.0.1
#spring.redis.port=6379
# 如果redis没有设置密码，请把下面的 spring.redis.password 注释掉
#spring.redis.password=pwd
#超时时间，单位是毫秒
#spring.redis.timeout=3000

# ElasticSearch 设置。【v1.x的配置，已废弃，请用v2.x的配置】
# 判断是否使用es进行日志记录，条件便是 hostname 是否启用，若启用，则使用ElasticSearch。那么 ActionLogUtil 、 ElasticSearchMode 则可以使用
# 如果 wm.elasticsearch.hostname 开启，那么优先使用es作为日志存储，阿里云日志服务将会无效。 
#wm.elasticsearch.hostname=192.168.31.24
#wm.elasticsearch.port=9200
#wm.elasticsearch.scheme=http

#
# 日志 https://github.com/xnx3/log
#
# 缓存日志的最大条数。当达到这个条数后，将自动提交日志。默认为100
# 这里方便测试是否提交，直接设为3。正常情况下建议使用默认值即可，不用设置
#log.cacheMaxNumber=3
# 缓存日志的最大时间，单位为秒。不设置默认是60。超过这个时间后，将会自动提交日志。即每隔多长时间就自动提交日志，然后重新开始累计即时
# 这里方便测试是否提交，直接设为1。正常情况下建议使用默认值即可，不用设置
#log.cacheMaxTime=60
# 设置日志存储到哪个日志仓库中【此项必填】
# 这里以数据库为例解释，以便于理解。数据库有多个表，每个表都会存储不同的数据（结构）
# 这里便是每个表代表一个数据仓库。通过设置此，可切换将数据存入不同的数据仓库
# 例如 ：
#     elasticsearch ： 这里便是设置索引的名字，可以将不同的数据存入不同的索引中
#     阿里云SLS日志服务 ： 这里便是设置的日志库的名字，可将不同的数据存入不同的日志库中
#     华为云LTS日志服务 ： 这里便是设置的日志流的名字
#log.tableName=useraction
# ElasticSearch 设置 【最新v2.x配置，请用这个】
# 下面便是具体针对ElasticSearch这种存储方式的配置了
# elasticsearch所在得hostname，比如在服务器本身安装，可以传入 127.0.0.1
#log.datasource.elasticsearch.hostname=127.0.0.1
# 端口号，不设置默认是 9200
#log.datasource.elasticsearch.port=9200
# scheme，如 http 、 https 不设置默认是http
#log.datasource.elasticsearch.scheme=http
# 登录得用户名。如果不需要登录，这里注释掉即可，无需配置。
#log.datasource.elasticsearch.username=xxxxxx
# 登录得密码。如果不需要登录，这里注释掉即可，无需配置。
#log.datasource.elasticsearch.password=xxxxxx


# 短信发送，短信通道。比如用户可以通过手机号+验证码自助开通客服平台。如需开通，联系 www.leimingyun.com
#sms.uid=10000
#sms.password=10000
 
# 企业版授权码。授权参见 https://www.leimingyun.com/price.html 当然，不授权完全可以免费使用，并且可用于商业使用。只不过企业版拥有更多功能插件，采用云部署，有更多锦上添花的功能。
#authorize=xxxxxx

# 文件上传 https://github.com/xnx3/FileUpload
#
# 设置允许上传的文件最大是多大，比如10MB 单位为 KB、MB ， 如果此项不设置，这里默认是3MB
#fileupload.maxSize=10MB
# 设置允许上传的后缀名,传入格式如 png|jpg|gif|zip 多个用英文|分割。如果不设置，默认允许像是pdf、word、图片、音频、视频、zip等常用的且安全的文件后缀都可上传
#fileupload.allowUploadSuffix=jpg|png|txt|zip
# 设置上传后文件所访问URL的域名，传入如： http://xxxx.com/  注意格式，后面以 / 结尾。非必填，可不设置。这里更多是用于像是CDN加速时，有专门的附件域名的场景使用
fileupload.domain=http://localhost:8080/
#
# 当前使用的是哪种存储方式。默认使用的是本地存储的方式。
# 上传文件保存到的路径，格式如 /mnt/tomcat8/fileupload/ 、或者windows服务器的话路径如 C:\\Users\\Administrator\\Desktop\\log\\  注意最后的斜杠不能拉下。如果不设置此，则不开启，上传文件则没任何动作。
#fileupload.storage.local.path=/mnt/tomcat8/fileupload/
fileupload.storage.local.path=G:\\git\\yunkefu\\target\\classes\\
